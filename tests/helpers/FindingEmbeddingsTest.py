import unittest
from math import sqrt

from src.helpers.FindingEmbUsingSample import Lagrangian_Method2

# Test cases were written by Lim Cheng Ze Jed

class FindingEmbeddingsTest(unittest.TestCase):
    def testcase_1(self):
        # A is in the form of 50 by 20 dimensions
        # b is in the form of 50 by 1 dimensions
        A = [[0 for _ in range(20)] for _ in range(50)]
        b = [1 for _ in range(50)]
        for row in range(len(A)):
            for col in range(len(A[0])):
                if row == col:
                    A[row][col] = 1  # makes it so that A is rank 20

        x_final, final_dist, lagragian = Lagrangian_Method2(A, b)

        self.assertTrue(42.1 >= final_dist >= 42.0)
        self.assertTrue(-1 + 2 * sqrt(5) - 0.01 <= lagragian <= -1 + 2 * sqrt(5) + 0.01)

    def testcase_2(self):

        A = [[0.038984185183731306, 0.2881618716050287, 0.5353106613551499, -0.3217791053545031, -0.7248059584676132],
             [-0.48780158432397563, 0.1799416021697055, 0.04942857580670152, -0.23550788991002203, -0.8196118459889107],
             [0.27138898753232943, 0.024413450417378114, 0.14555742730880095, -0.2927843749208353, -0.9048990678455278],
             [0.051108064518565595, 0.16551456688870297, 0.3655948570455996, -0.2415601303569984, -0.8820328337678186],
             [-0.2199604383732874, 0.31019953105236897, -0.3081391737813689, -0.006759703084402241,
              -0.8720081361298013],
             [-0.34207924438159015, 0.04381258536092936, -0.1922826282864073, 0.12497054798265186, -0.9102042884913234],
             [-0.006424748520680044, 0.2328124942144035, 0.1020720088816916, -0.6113985157419226, -0.7493531786689386],
             [0.0048767729268902275, 0.13624615161502932, 0.40830433338819494, -0.014746717561065516,
              -0.9024873610152774],
             [-0.12359632957320088, 0.3248604063923079, -0.2182152713476713, 0.35164504355177056, -0.8413783950553304],
             [0.6032364672158912, -0.24119463029948537, -0.2468993854471928, -0.11021117382281631, -0.7105104625694022],
             [-0.21656664656466992, 0.2583582952055213, 0.010851088525252796, 0.04436916007143012, -0.9403528157229395],
             [0.2681233931295952, 0.41434489544918673, -0.09541325766693942, -0.23876135365454318, -0.830853473517657],
             [0.03695598346725131, -0.00811717481459651, 0.1721814649698266, 0.32298488259088237, -0.9298401423636657],
             [-0.29002612642370845, -0.38988360476311545, 0.10968229377048218, 0.24504737102347693,
              -0.8317434998814167],
             [-0.1461316625409579, 0.3021579226402159, -0.3642678949253412, -5.4101319312238444e-05,
              -0.868708845975563],
             [0.2712159981181861, 0.10466885051170459, 0.005447690231496474, 0.1601560066734008, -0.9432956589777494],
             [-0.11893323854696547, -0.24396304817326833, -0.5116520251557433, -0.02652850576657847,
              -0.8147670741153509],
             [-0.2771140931365695, 0.06823352322435733, 0.16310459940461053, 0.18827244641182644, -0.9254740984253118],
             [0.4164471792620171, -0.25071291835908927, -0.09196282790098902, 0.158039541106359, -0.8545649403116828],
             [0.01836946234603564, 0.14162134117178296, 0.49247490987232645, 0.08229412135095011, -0.8545772063294909],
             [0.20339875864597076, 0.17782048496419178, 0.040296565463584004, 0.17282867016049358, -0.9463166818054591],
             [-0.1058226052793891, -0.24321301269396084, -0.5154188141586153, -0.028561844993522333,
              -0.8143566492364397],
             [0.054788735554625496, -0.061052574368808586, 0.17660718277426077, 0.4865938769361061,
              -0.8516496032723992],
             [-0.528316476047453, -0.4785337461203661, -0.04960510033186975, -0.056460950424180714,
              -0.6973082018795308],
             [0.11569723548222997, -0.23787017148261155, 0.24455863414628137, 0.12512594876026423, -0.9244276669113815],
             [0.26653450251972305, 0.4102701886843365, -0.1109708407760965, -0.24083217595777268, -0.8308568634772329],
             [-0.22028427689265312, 0.46124161390662494, -0.4562660774150978, 0.16712438494858062, -0.708958296691011],
             [-0.26035554454110305, -0.20730296786993385, 0.27813323310771887, -0.17624280824103503,
              -0.883640771473693],
             [0.130917754311154, -0.07007641694404201, 0.08862815613701819, 0.330628242622557, -0.9277822263200073],
             [0.38706915207637344, -0.14266578965129667, -0.19556950455566222, -0.1926401056683172,
              -0.8686001902193105],
             [-0.05289913448021401, -0.434051093402644, -0.140582440202897, -0.09373034305197128, -0.883319070566957],
             [-0.35390802173626357, -0.29476522842953895, -0.23414858721180554, -0.42076352710184856,
              -0.7456507766410431],
             [0.021489754814918844, -0.12045339893649104, -0.23276649410734046, 0.2814427162282811,
              -0.9228428368821213],
             [-0.03140956091611813, -0.08895664479282596, 0.12409928318609276, 0.3404465877197564, -0.9272516690571404],
             [-0.2829780790701371, -0.355519292170556, 0.06625570021974736, 0.11869552309523596, -0.8803698229200093],
             [-0.2754590195600917, 0.12417504630522441, 0.10757655568228489, 0.20999426347196712, -0.9235975990062583],
             [0.3420081250843996, -0.080288785767756, 0.1530323848458252, -0.07151502838128575, -0.9208966544662932],
             [0.1731788408807153, -0.1957175469913383, 0.24992784556174147, 0.11069630758038436, -0.9257354492737065],
             [-0.23397874853141096, -0.08509300649959925, 0.29083888844917527, -0.002652517802285503,
              -0.9238067141549281],
             [-0.003000832037300678, -0.3483430780043097, 0.13775226164387516, -0.4133924045977915,
              -0.8299271925972252],
             [0.1939523148761421, 0.1469156473903899, -0.38044246534392406, 0.005817574145291385, -0.8922040351210364],
             [0.04553120998866891, -0.05168823529839816, 0.1504363918403852, 0.421025849811693, -0.8918303424502407],
             [-0.11681362651663968, 0.2991738315020631, -0.20314420170489206, 0.24662389535936846, -0.8914924312892172],
             [0.3935079602656524, -0.15837133868235592, -0.1899474463525683, -0.16639924369333972, -0.8696558126776139],
             [-0.19509921306784103, 0.011353093879783425, -0.31318113403716197, -0.72750283359679, -0.5783289944949682],
             [-0.0693428753973649, 0.18482874949356853, 0.31351724851752594, -0.286495874275197, -0.8835479417950242],
             [-0.02726329533177355, -0.3409520711721221, 0.1292949873945754, -0.4216842154164942, -0.8297431318886822],
             [0.34283958319893604, -0.22125128263828517, -0.11477962294047263, 0.05204114518135741,
              -0.9042269691878225],
             [-0.03234192219671581, 0.46991642799465044, 0.0833075304788099, -0.0622457769701092, -0.8759668503313073],
             [0.15798216239321938, 0.0250052245894306, -0.33517705122677216, 0.07315112910872967, -0.9255926280143397]]
        b = [0.5163978, 0.5163978, 0.6708204, 0.6708204, 0.6708204, 0.8, 0.6324555, 0.6, 0.91287094, 0.5163978, 0.8,
             0.7745967, 0.6761234, 0.5477226, 0.8944272, 0.91287094, 0.5163978, 0.73029673, 0.73029673, 0.5477226,
             0.73029673, 0.7745967, 0.74535596, 0.5163978, 0.73029673, 0.7745967, 0.7745967, 0.6708204, 0.8451542,
             0.6708204, 0.6708204, 0.31622776, 0.91287094, 0.6761234, 0.6, 0.73029673, 0.8, 0.73029673, 0.6, 0.5163978,
             0.8944272, 0.7905694, 0.6, 0.6708204, 0.4472136, 0.6708204, 0.5163978, 0.8, 0.8944272, 0.8]

        x_final, final_dist, lagragian = Lagrangian_Method2(A, b)

        self.assertTrue(0.53 >= final_dist >= 0.52)
        self.assertTrue(-1.37 <= lagragian <= -1.36)
    def testcase_3(self):
        A = [[0.07938275702089434, -0.23016197983263847, -0.00438366868382873, -0.3002391821052831, 0.922258671877617],
             [-0.15223931559845041, 0.08663172855639154, 0.25365624322879393, -0.286761507615414, 0.90705263487827],
             [0.21643430975355804, -0.12190301863274801, 0.07515974139632321, -0.2326147644701599, 0.9373031676638566],
             [-0.2458367380806998, -0.1898142836274398, -0.25314843363779393, 0.23685354524319083, 0.8850712429206649],
             [-0.06051464742601621, 0.06208470865750222, -0.15826193264219493, -0.33664699194979947,
              0.9241782457041824],
             [-0.15986454812425424, -0.29000719004405284, 0.0926185670669859, -0.12181109933651978, 0.9310870062624944],
             [0.07427583060022275, -0.22510542194784136, -0.005124741183624648, -0.30447845586015504,
              0.9225384853018248],
             [-0.18170115020808306, -0.32277981348041124, -0.27019751084514826, -0.06146853003027862,
              0.8865736343398838],
             [-0.018426295066862816, -0.09265145122341906, 0.5892853924250279, 0.26400362921778975, 0.7577077209353064],
             [0.0759549121158588, 0.29696597212290343, -0.040595586577342996, -0.22078053917559132, 0.9250135213500764],
             [-0.33240773166009885, 0.06396267608513312, -0.08224905708427845, -0.1446664881854056, 0.9261320509824402],
             [0.18629056141711828, -0.14858507933372295, -0.38246126070191205, 0.3628104249955954, 0.8156655446068265],
             [-0.2144048223994455, 0.03247379190633822, -0.26333336855583966, 0.15848219549390274, 0.9265608213635668],
             [0.046450973663399515, 0.13872240788911153, 0.08660180167722033, 0.6188280001821794, 0.7669096654144721],
             [0.23890700999956288, -0.12792576157934046, 0.3932970071217494, 0.6575362811223479, 0.582685115114972],
             [-0.07034011969271672, -0.08592698488694743, 0.447355460809322, -0.07980383138637911, 0.883840065345171],
             [0.7040757639843008, -0.057675730227129254, -0.09573425301290196, -0.101735380790819, 0.6938556719997814],
             [-0.18018683602493413, 0.2597052718862019, -0.25988320908546747, 0.06458697016590326, 0.9101511506881709],
             [-0.39703244748403405, -0.1318885732362189, 0.16810510721524036, 0.3066413033163818, 0.8382615487362287],
             [0.3159675621844935, 0.10570882404364923, 0.3203060671640827, -0.12872343271854458, 0.8773964016226414],
             [-0.11858793988442043, 0.014788157403339304, 0.4492823662573987, -0.0790464938769803, 0.8818249362269646],
             [0.3745617588287097, 0.04120833984484582, -0.16590925363771794, -0.1819189954191919, 0.8929641427020598],
             [-0.08785245178113874, -0.04081995780869006, -0.2167241131747534, -0.30964941723310924,
              0.9207407751114427],
             [-0.12526553199211318, -0.4468940792573438, -0.07396298339122352, 0.18480519392640124, 0.8631168785252903],
             [-0.24336226686521123, 0.2814324142294623, 0.052372614539128656, -0.04291306522384085, 0.9257354814154303],
             [0.2252426971399528, -0.08443493757437745, -0.35043527898619975, 0.3744775817667873, 0.8240741015195108],
             [-0.19848231170854896, 0.09871489280938113, 0.27920769305764576, -0.37878797327578645, 0.8540625722419386],
             [0.07185781021152274, 0.30053752331266775, -0.043248629795516975, -0.21755100756780124,
              0.9248322914875737],
             [-0.202973453952978, 0.3731707202260733, -0.3031869503528628, 0.06564728719563034, 0.8504783934071484],
             [0.2110398299193701, 0.3878873900180453, 0.2816307257103676, 0.1588739883518102, 0.8369281648526639],
             [-0.3842421066070583, -0.05351770805752136, 0.1568042394958067, 0.337485321669293, 0.843214057465765],
             [0.24496966447518015, 0.23029391262893395, -0.23127471815378267, 0.027355385251545558, 0.9125339802060007],
             [0.3961454176259097, 0.02100327059309982, -0.1421275753705245, -0.15891502014170664, 0.8928456973348478],
             [-0.21968908450517324, -0.2901715828095746, -0.27062275843943984, -0.06886343551625675,
              0.8885709362091982],
             [-0.1396501308841625, 0.2862012580791497, -0.24693947285464476, 0.11217550780197773, 0.9083084460857495],
             [-0.04843942551676227, -0.47466342564477293, -0.017674918635479594, 0.15534371890050291,
              0.8648145354990338],
             [0.22870386188094566, -0.28934523273416984, -0.13894225653611963, -0.05752036037201289,
              0.9172569636753555],
             [-0.07627930535327149, 0.3495475319005879, -0.07163641177616735, 0.33366316462578705, 0.8692152252585564],
             [0.009554376939611952, -0.4462270835213634, 0.06860698817689126, 0.4791274304189284, 0.7526752889837259],
             [-0.08277849749744133, 0.13960892569235642, -0.22013575675629637, -0.279688036389149, 0.9203107731307694],
             [-0.011170956686276217, 0.05360544764604561, -0.19420320596074078, -0.3304862465839798,
              0.9219900331855381],
             [0.3407602502645286, 0.19607655201129545, -0.11004434661706916, 0.18685214627085658, 0.8935395653401264],
             [0.2675737410889638, -0.4159089623999927, 0.2819281130645766, -0.06237463810024684, 0.8197865403264257],
             [-0.1790964641511228, 0.07478328005705852, 0.23197410602529178, -0.2856531826965963, 0.9093526219006945],
             [-0.18926517752259234, -0.013245295332389585, 0.6290226743924878, -0.2122665221776056, 0.7233786375665278],
             [-0.14304283821102115, 0.5074557238715803, -0.2014067398102372, 0.416650406393041, 0.7126466156424534],
             [0.4939877057806241, -0.10808854113589757, 0.04031178671934929, 0.032534879655849856, 0.8611674954164296],
             [-0.19359373183804032, 0.26077746821373965, 0.26897199409120626, 0.0974999725003027, 0.9014790074913333],
             [0.3137874043327074, 0.31878088607524024, 0.2951098795635498, 0.11466692443798604, 0.8364674931461495],
             [-0.2378201640220258, -0.39156893718167224, -0.3002255550918234, -0.10080114925326954, 0.830553479068984]]
        b = [0.47140452, 0.7745967, 0.5163978, 0.28867513, 0.65465367, 0.7745967, 0.70710677, 0.5163978, 0.4082483,
             0.47140452, 0.70710677, 0.33333334, 0.7745967, 0.4082483, 0.57735026, 0.57735026, 0.0, 0.5163978,
             0.33333334,
             0.8660254, 0.8660254, 0.5163978, 0.65465367, 0.8660254, 0.5163978, 0.6666667, 0.70710677, 0.47140452,
             0.47140452, 0.6666667, 0.6666667, 0.2581989, 0.2581989, 0.7745967, 0.5163978, 0.57735026, 0.5163978,
             0.28867513, 0.8164966, 0.4364358, 0.65465367, 0.57735026, 0.6666667, 0.5163978, 0.6666667, 0.33333334,
             0.28867513, 0.57735026, 0.6666667, 0.47140452]

        x_final, final_dist, lagragian = Lagrangian_Method2(A, b)

        self.assertTrue(1.62 >= final_dist >= 1.61)
        self.assertTrue(-1.51 <= lagragian <= -1.50)

    def testcase_4(self):
        A = [[0.12935599824097355, -0.06947167346317464, 0.08442603956536872, -0.5193462572967794, -0.8376111433801932],
             [0.08066055961159133, 0.4081842637025055, 0.39498180859938253, -0.2373755919832606, -0.7839143387052133],
             [0.09287287345178037, 0.1683956295318837, -0.02098321495914175, 0.43363902590973413, -0.8800763738276594],
             [-0.13229612356786347, 0.013620036080104028, -0.3727527149626296, -0.15763181960045203,
              -0.904720876394943],
             [-0.1940097663048975, 0.03742719124090436, -0.45701333856820026, -0.19003613666114536,
              -0.8461586715753576],
             [0.01704186974789415, -0.4431110305199754, 0.02049698953498728, -0.10638378940347257, -0.889732853390917],
             [0.1728226677330011, -0.3377280492788084, 0.2782199442530785, -0.12621078684346818, -0.8733479180513002],
             [0.05150150143496966, 0.4942922544696473, -0.013467329336182715, 0.12697886063706748, -0.8583226429855618],
             [-0.2150660832858345, -0.23304261953932212, -0.18887459338857723, 0.10431719697483648,
              -0.9235161200015535],
             [-0.35054697509565536, -0.056969298863805994, -0.044480024148760046, 0.3831273732919503,
              -0.8515317122926048],
             [-0.30408903417093075, -0.17895821753946775, 0.1638166159857845, 0.12677143315665404, -0.9124674929732874],
             [-0.14043880277608067, 0.39118963332294476, 0.5117499355458777, -0.264271061793749, -0.7039321164874925],
             [-0.2841842623576779, -0.20706597539711796, 0.1434587485642249, 0.16161031950249777, -0.9108593053528179],
             [0.18439075872378927, 0.20970760096334756, -0.5766122340022699, -0.3067703433679661, -0.7038700730358951],
             [0.09654647856609612, -0.4388487128096102, 0.045417856261974636, -0.1206597803135069, -0.8840073656918693],
             [0.33637980116318406, -0.11650319111207026, -0.3662108965014737, 0.2091861878310483, -0.8339102751194466],
             [-0.23834387823382633, 0.2720701836119279, -0.26400324547834, 0.1792188333455614, -0.8759868204341652],
             [0.2948054738054836, -0.08376150089767061, 0.4629240827487967, 0.1128575399229064, -0.8240377474376736],
             [0.4765941656433603, 0.081696142678606, 0.007774160922890515, 0.4342776323573217, -0.7599514759280321],
             [-0.22946958156735708, -0.036783468358716695, 0.29403845974264387, -0.16357058978270242,
              -0.9125660124565933],
             [-0.0738872378380368, 0.08209326471225058, -0.3778020070531123, -0.18414714963062054, -0.900642471924714],
             [0.2256647399512234, -0.04835798372535083, 0.017406905898131576, 0.6763899343946452, -0.6992357073473499],
             [0.12935601830213866, -0.06947163791355107, 0.08442604196291609, -0.5193462514791216, -0.8376111465960355],
             [-0.22373883758243684, 0.2106175491614203, 0.2643228264222335, 0.23981445016050273, -0.8821585210047322],
             [0.29368540907645013, 0.13508836355184867, -0.049163647355015994, -0.24891719664862855,
              -0.9116595747051177]]
        b = [0.57735026, 0.35355338, 0.75, 0.4472136, 0.4082483, 0.6708204, 0.75, 0.28867513, 0.61237246, 0.61237246,
             0.61237246, 0.57735026, 0.8164966, 0.57735026, 0.6708204, 0.28867513, 0.5, 0.57735026, 0.35355338,
             0.4472136,
             0.8944272, 0.57735026, 0.28867513, 0.75, 0.6708204]

        x_final, final_dist, lagragian = Lagrangian_Method2(A, b)

        self.assertTrue(0.95 >= final_dist >= 0.94)
        self.assertTrue(-1 <= lagragian <= -0.99)


if __name__ == '__main__':
    unittest.main()
